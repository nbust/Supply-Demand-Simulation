package firstPackage;

import java.util.ArrayList;
/**
 * @author Noah Buster, Justin Dial, Olivia Sayuk
 * Date: 2024 Sep 16
 * Description: ConsumerCurve has an arraylist of Points
 * as well as methods to manage and manipulate Point arraylist.
 */
public class ConsumerCurve {
	private ArrayList<Point> cCurve;
	
	/**
	 * constructor method instantiates cCurve of size ten with ascending points
	 */
	public ConsumerCurve() {
		
		cCurve = new ArrayList<Point>(10);
		
		int	   x = -1;
		double y = -1.0;
		
		for (int i = 0; i < cCurve.size(); i++) {
			cCurve.set(i, new Point(x++, y++));
		}
	}
	
	public ConsumerCurve(int n, Point startPoint, int dx, double dy) {
		
		cCurve = new ArrayList<Point>(n);
		
		int startQuantity = startPoint.getQuantity();
		double startPrice = startPoint.getPrice();
		for (int i = 0; i < n; i++) {
			cCurve.add(i++, new Point(startQuantity + (i*dx), startPrice + (i*dy)));
		}
	}
	
	public boolean add(Point p) {
		
		if (p.getPrice() > 0 && p.getQuantity() > 0) {
			for (int i = 0; i < cCurve.size();) {
				if (cCurve.get(i).getPrice() < p.getPrice()) {
					i++;
				}
				else {
					cCurve.add(i, p);
				}
			}
			return true;
		}
		else return false;
	}
	
	
	public boolean remove(Point p) {
		for (int i = cCurve.size(); i > -1; i--) {
			if (cCurve.get(i).equals(p) == true) cCurve.remove(i);
		}
		return true;
	}
	
	public int isOnCurve(Point p) {
		if (cCurve.indexOf(p) > 0) return 1; else return 0;
	}
	
	public String toString() {
		
		String result = "[";
		for (int i = 0; i < cCurve.size(); i++) {
			if (cCurve.get(i) != null) {
				result += cCurve.get(i).toString();
			}
			if (i < cCurve.size() - 1) {
				result += ", ";
			}
		}
		result += "]";
		return result;	
	}
}
